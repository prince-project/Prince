/*----------------------------------------*
| 프로그램명 : 하나금융투자 Open API 예제
| 버      전 : v 
| 배포  일자 :
| 기      타 :
*----------------------------------------*/

// HFCommClient.cpp : 응용 프로그램에 대한 클래스 동작을 정의합니다.
//

#include "stdafx.h"
#include "HFCommClient.h"
#include "HFClientSampleDlg.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#endif


// CHFCommClientApp

BEGIN_MESSAGE_MAP(CHFCommClientApp, CWinAppEx)
	ON_COMMAND(ID_HELP, &CWinApp::OnHelp)
END_MESSAGE_MAP()


// CHFCommClientApp 생성

CHFCommClientApp::CHFCommClientApp()
{
	// TODO: 여기에 생성 코드를 추가합니다.
	// InitInstance에 모든 중요한 초기화 작업을 배치합니다.
}


// 유일한 CHFCommClientApp 개체입니다.

CHFCommClientApp theApp;


// CHFCommClientApp 초기화

BOOL CHFCommClientApp::InitInstance()
{
	// 응용 프로그램 매니페스트가 ComCtl32.dll 버전 6 이상을 사용하여 비주얼 스타일을
	// 사용하도록 지정하는 경우, Windows XP 상에서 반드시 InitCommonControlsEx()가 필요합니다.
	// InitCommonControlsEx()를 사용하지 않으면 창을 만들 수 없습니다.
	INITCOMMONCONTROLSEX InitCtrls;
	InitCtrls.dwSize = sizeof(InitCtrls);
	// 응용 프로그램에서 사용할 모든 공용 컨트롤 클래스를 포함하도록
	// 이 항목을 설정하십시오.
	InitCtrls.dwICC = ICC_WIN95_CLASSES;
	InitCommonControlsEx(&InitCtrls);

	CWinAppEx::InitInstance();

	AfxEnableControlContainer();

	// 표준 초기화
	// 이들 기능을 사용하지 않고 최종 실행 파일의 크기를 줄이려면
	// 아래에서 필요 없는 특정 초기화
	// 루틴을 제거해야 합니다.
	// 해당 설정이 저장된 레지스트리 키를 변경하십시오.
	// TODO: 이 문자열을 회사 또는 조직의 이름과 같은
	// 적절한 내용으로 수정해야 합니다.
	SetRegistryKey(_T("로컬 응용 프로그램 마법사에서 생성된 응용 프로그램"));

	/*----------------------------------
	  Application 경로를 저장한다.
	 -----------------------------------*/
	CString strFileName;
	char szPath[MAX_PATH];
	GetModuleFileName(AfxGetInstanceHandle(), szPath, MAX_PATH);
	*strrchr(szPath, '\\') = '\0';
	m_sAppPath = szPath;

	CHFClientSampleDlg dlg;
	m_pMainWnd = &dlg;
	INT_PTR nResponse = dlg.DoModal();
	if (nResponse == IDOK)
	{
		// TODO: 여기에 [확인]을 클릭하여 대화 상자가 없어질 때 처리할
		//  코드를 배치합니다.
	}
	else if (nResponse == IDCANCEL)
	{
		// TODO: 여기에 [취소]를 클릭하여 대화 상자가 없어질 때 처리할
		//  코드를 배치합니다.
	}

	// 대화 상자가 닫혔으므로 응용 프로그램의 메시지 펌프를 시작하지 않고  응용 프로그램을 끝낼 수 있도록 FALSE를
	// 반환합니다.
	return FALSE;
}

//*******************************************************************
// Function Name : RegisterOCX
// Function      : OCX 레지스트리 등록
// Param         : CString strFileName
// Return        : int 
// Create        : 
// Comment       : 
//******************************************************************
int CHFCommClientApp::RegisterOCX(CString strFileName)
{
	int iReturn = 1;
	CString szErrorMsg;
	strFileName.Replace("/", "\\");

	if (FAILED(OleInitialize(NULL)))
	{
		AfxMessageBox(_T("DLLRegister OleInitialize 실패"), MB_TOPMOST);
		return 1;
	}

	SetErrorMode(SEM_FAILCRITICALERRORS);

	HINSTANCE hLib = LoadLibraryEx(strFileName, NULL, LOAD_WITH_ALTERED_SEARCH_PATH);

	if (hLib == NULL)
	{
		szErrorMsg.Format(_T("File Name=%s, GetLastError() NO = 0x%08lx\n"), strFileName, GetLastError());
		AfxMessageBox(szErrorMsg, MB_TOPMOST);
		iReturn = 0;
		goto CleanupOle;
	}

	HRESULT(STDAPICALLTYPE * lpDllEntryPoint)(void);

	// Find the entry point.
	(FARPROC&)lpDllEntryPoint = GetProcAddress(hLib, _T("DllRegisterServer"));
	if (lpDllEntryPoint == NULL)
	{
		TCHAR szExt[_MAX_EXT];
		_tsplitpath_s(strFileName, NULL, sizeof(NULL), NULL, sizeof(NULL), NULL, sizeof(NULL), szExt, sizeof(szExt));

		if ((_stricmp(szExt, ".dll") != 0) && (_stricmp(szExt, ".ocx") != 0))
		{
			szErrorMsg.Format("File Name=%s, GetProcAddress Fail\n", strFileName);
			AfxMessageBox(szErrorMsg, MB_TOPMOST);
		}

		iReturn = 0;
		goto CleanupLibrary;
	}

	if (FAILED((*lpDllEntryPoint)()))
	{
		szErrorMsg.Format("File Name=%s, lpDllEntryPoint Fail\n", strFileName);
		AfxMessageBox(szErrorMsg, MB_TOPMOST);
		iReturn = 0;
		goto CleanupLibrary;
	}

CleanupLibrary:
	FreeLibrary(hLib);

CleanupOle:
	OleUninitialize();

	return iReturn;
}